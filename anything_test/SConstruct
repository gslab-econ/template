# Preliminaries
import os
import sys
sys.dont_write_bytecode = True # Don't write .pyc files

# Test for proper prerequisites and setup
from configuration_test import configuration_test
[mode, stata_executable, cache_dir] = configuration_test(ARGUMENTS, 
                                                         gslab_python_version = '4.0.0')
import gslab_scons as gs
import gslab_scons.log as log
import yaml
import atexit


# Start log after getting mode and release version
mode = ARGUMENTS.get('mode', 'develop') 
vers = ARGUMENTS.get('version', '') 
log.start_log(mode, vers)


# Define the SCons environment
env = Environment(ENV = {'PATH' : os.environ['PATH']}, 
                  IMPLICIT_COMMAND_DEPENDENCIES = 0,
                  BUILDERS = {'BuildStata':  Builder(action = gs.build_stata),
                              'BuildPython': Builder(action = gs.build_python)},
                  ROOT = Dir('.'),
                  stata_executable = stata_executable)
# paths
env['PATHS'] = yaml.load(open('config_global.yaml', 'rU'))

# Only computes hash if time-stamp changed
env.Decider('MD5-timestamp') 

# Export environment
Export('env')

# Run sub-trees
Default('./build', './release')
SConscript('source/anything/SConscript') 

# Additional mode options
if mode == 'cache':
    (cache_dir)

atexit.register(log.end_log)

